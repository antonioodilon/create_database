def create_dict_table_db() -> tuple:    """    This function helps the user create a table for her/his database. It prompts the user for several pieces of    information related to a SQL-based relational database (for example, the name of the new table, the primary    key and its type etc.). It then returns this information, along with a dictionary containing the database's    columns filled with the values the user inserted.    :return: Returns a `tuple` containing the following:    prompt_name_table: string,    prompt_type_pk: string,    prompt_values: string,    dict_password: dictionary,    prompt_primary_key: string,    list_values: list,    prompt_len_keys_dict: integer    """    dict_password = {}    print("This function will help you insert information into a table of your choice in your "          "database.\n")    # "IMPORTANT: Make sure you have inserted the correct names for the database and the chosen"    # "table, and that you have inserted the correct extension in the database's name.")    prompt_name_table = input("Please insert the name of your table: ")    prompt_primary_key = input("What will be the name of your primary key? ")    prompt_type_pk = input("What is the type of your primary key?"                           "\n (Please type in a word in capital letters)"                           "\n")    prompt_values = input("Now type in the names of the columns of your table followed by their respective "                          "types in the "                          "following format, and separated by a comma and a space:"                          "\n name TEXT, phone INTEGER, email TEXT, etc"                          "\n")    prompt_len_keys_dict = len(prompt_values.split(sep=","))    _ = input(f"Apart from {prompt_primary_key}, your table will have {prompt_len_keys_dict} columns. "              f"Is this correct? (Press any key to continue) ")    while True:        prompt_create_dict = input('Would you like to insert new values to a '                                   'dictionary so they can later be inserted into '                                   'your database? Type Y for Yes and N for No: ').casefold()        if prompt_create_dict == "Y".casefold():            row_prim_key = input(f'Please insert the {prompt_primary_key} you would like to insert '                                 'information in: ')            new_rows_input = input('Please insert the information separated by commas and a space: ')            if len(new_rows_input.split(sep=", ")) == prompt_len_keys_dict:                new_rows_password = new_rows_input.split(sep=", ")                dict_password[row_prim_key] = new_rows_password            else:                print("The amount of information that you are trying to insert in the table is different "                      "from the amount of columns that you have set up in the table. Either terminate the "                      "program and re-insert a new value for the columns, or double-check your information "                      "and insert the correct amount of values. ")                pass            print("This is your dictionary so far: ")            for key, value in dict_password.items():                print(key, ": ", value)            print('-' * 80)        elif prompt_create_dict == "N".casefold():            print("Here is the final dictionary whose keys and values will be inserted "                  "into your database: ")            list_values = []            for key, value in dict_password.items():                print(key, ": ", value)                list_values.append(value)            print('-' * 80)            print("Now we are inserting this information into your database. Please check the program you use for"                  " manipulating your SQL database to make sure everything is correct.")            return prompt_name_table, prompt_type_pk, prompt_values, dict_password, prompt_primary_key, list_values, \                   prompt_len_keys_dict        else:            print("Please type in a valid answer. 'Y' for Yes or 'N' for No.")